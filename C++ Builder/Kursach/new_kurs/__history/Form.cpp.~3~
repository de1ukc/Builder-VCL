//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Form.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
#include "Calc.h"
TForm1 *Form1;
Calc A();

void zerocheck(const int n, TStringGrid *Grid )
{ for (int i = 1; i <= n; i++)
	 { for (int j = 1; j <= n; j++)
		  { if (Grid->Cells[i][j].IsEmpty())
			  { Grid->Cells[i][j] = FloatToStr(0.0);

			  }

		  }

	 }
}

void checklabeled(TLabeledEdit *Labeled)
{ if (Labeled->Text.IsEmpty())
	{
		Labeled->Text = IntToStr(0);

	}
}

 void clearMemory(float** a, int n) { //Функция освобождения памяти, выделенной под двумерный динамический массив
        for (int i = 0; i < n; i++) {
                delete[] a[i];
            }
            delete [] a;
		}

 int findDet(float** a, int n) {
		if (n == 1)
			return a[0][0];
		else if (n == 2)
			return a[0][0] * a[1][1] - a[0][1] * a[1][0];
		else {
			int d = 0;
			for (int k = 0; k < n; k++) {
				float** m = new float*[n-1];
                    for (int i = 0; i < n - 1; i++) {
						m[i] = new float[n - 1];
                }
                for (int i = 1; i < n; i++) {
                    int t = 0;
                    for (int j = 0; j < n; j++) {
                        if (j == k)
                            continue;
                        m[i-1][t] = a[i][j];
                        t++;
                    }
                }
				d += pow(-1, k + 2) * a[0][k] * findDet(m, n - 1);
				clearMemory(m, n - 1); //Освобождаем память, выделенную под алгебраическое дополнение
            }
			return d; //Возвращаем определитель матрицы
		}
	}
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
	ComboBox1->DoubleBuffered = true;
	ComboBox1->AutoComplete = true;

	ComboBox1->AddItem("Матрица А",NULL);
	ComboBox1->AddItem("Матрица В",NULL);
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	checklabeled(LabeledEdit1);
	zerocheck(StrToInt(LabeledEdit1->Text),StringGrid1);
	for (int i = 1; i <= StrToInt(LabeledEdit1->Text); i++)
		{ for (int j = 1; j < StrToInt(LabeledEdit1->Text); j++)
			 { StringGrid3->Cells[i][j] = StringGrid1->Cells[i][j];

			 }

		}

}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button2Click(TObject *Sender)
{
	checklabeled(LabeledEdit1);

if (ComboBox1->Text == "Матрица А")
{
	zerocheck(StrToInt(LabeledEdit1->Text),StringGrid1);
	Calc A(StrToInt(LabeledEdit1->Text),StringGrid1);
	int n = A.getrows();
	float ** a = A.getarray();
	int k = findDet(a,n);
	 //clearMemory(a, n);
	 ShowMessage(k);
}
else
{
	zerocheck(StrToInt(LabeledEdit1->Text),StringGrid2);
	Calc B(StrToInt(LabeledEdit1->Text),StringGrid2);

}

}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button8Click(TObject *Sender)
{   for(int i=1; i <StringGrid3->ColCount;i++) {
	for(int j=1; j <StringGrid3->RowCount;j++) {
	  StringGrid3->Cells[i][j] = "";
	}
  }

}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button9Click(TObject *Sender)
{
  for(int i=1; i <StringGrid1->ColCount;i++) {
	for(int j=1; j <StringGrid1->RowCount;j++) {
	  StringGrid1->Cells[i][j] = "";
	}
  }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button10Click(TObject *Sender)
{
	for(int i=1; i <StringGrid2->ColCount;i++) {
	for(int j=1; j <StringGrid2->RowCount;j++) {
	  StringGrid2->Cells[i][j] = "";
	}
  }
}
//---------------------------------------------------------------------------

