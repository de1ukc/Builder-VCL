//---------------------------------------------------------------------------

#pragma hdrstop

#include "List.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
template <typename T>
class List {
 public :
 List (){
 Size = 0;
 head = nullptr;
 }
 void push_back(T train_number_1,T destination_1,T time_1, T empty_seat_1,
 T train_number_2,T destination_2, T time_2, T empty_seat_2, T train_number_3,
	 T destination_3, T time_3, T empty_seat_3, T date){
 if (head == nullptr)
   {
	head = new Day<T>(train_number_1, destination_1, time_1, empty_seat_1,
	  train_number_2, destination_2, time_2, empty_seat_2, train_number_3,
	  destination_3, time_3, empty_seat_3, date);

   }
 else
 {
  Day<T> *cur = this->head;
  while (cur->head != nullptr) {cur = cur->head;}
  cur->head = new Day<T>(train_number_1, destination_1, time_1, empty_seat_1,
	  train_number_2, destination_2, time_2, empty_seat_2, train_number_3,
	  destination_3, time_3, empty_seat_3, date);
 }
  Size++;
 }

 int GetSize(){return Size;}

 T& operator[](const int index  ){
  int counter = 0; // счётчик, в каком мы элементе
  Day<T> *cur = this->head;
  while (cur != nullptr)
	   { if (counter == index)
		   {

		   }
		   cur = cur->pNext;
		   counter++;

	   }

 }


 private :
 int Size;
 List *head;
	template <typename U>
	class Day {
	public :
	Day *pNext;       // указатель на некст член списка
	T date;
	T train_number_1;
	T destination_1;
	T time_1;
	T empty_seat_1;
	/////////////////////
	T train_number_2;
	T destination_2;
	T time_2;
	T empty_seat_2;
	/////////////////////
	T train_number_3;
	T destination_3;
	T time_3;
	T empty_seat_3;
	Day (T train_number_1 = T(),T destination_1 = T(),
	 T time_1 = T(), T empty_seat_1 = T(),T train_number_2 = T(),
	 T destination_2 = T(), T time_2 = T(),
	 T empty_seat_2 = T(),T train_number_3 = T(),
	 T destination_3 = T(), T time_3 = T(), T empty_seat_3 = T(),
	 T date = T(),Day *pNext = nullptr ){
	this->train_number_1 = train_number_1;
	this->destination_1 = destination_1;
	this->time_1 = time_1;
	this->empty_seat_1 = empty_seat_1;
	////////////////////////////
	this->train_number_2 = train_number_2;
	this->destination_2 = destination_2;
	this->time_2 = time_2;
	this->empty_seat_2 = empty_seat_2;
	////////////////////////////
	this->train_number_3 = train_number_3;
	this->destination_3 = destination_3;
	this->time_3 = time_3;
	this->empty_seat_3 = empty_seat_3;
	this->date = date;
	this->pNext = pNext;
	}


	};

};
